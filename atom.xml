<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>空心话</title>
  
  <subtitle>闲来无事</subtitle>
  <link href="/lipapa.github.io/atom.xml" rel="self"/>
  
  <link href="https://lipapasma.github.io/lipapa.github.io/"/>
  <updated>2018-07-24T10:53:48.538Z</updated>
  <id>https://lipapasma.github.io/lipapa.github.io/</id>
  
  <author>
    <name>Lipapa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原型是什么</title>
    <link href="https://lipapasma.github.io/lipapa.github.io/2018/07/24/my-first-blog/"/>
    <id>https://lipapasma.github.io/lipapa.github.io/2018/07/24/my-first-blog/</id>
    <published>2018-07-24T00:44:32.346Z</published>
    <updated>2018-07-24T10:53:48.538Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66"><br></iframe><br>在JavaScript中原型是一个prototype对象，用于表示类型之间的关系。<br> 原型链是针对构造函数的，比如我先创建了一个函数，然后通过一个变量new了这个函数，那么这个被new出来的函数就会继承创建出来的那个函数的属性，然后如果我访问new出来的这个函数的某个属性，但是我并没有在这个new出来的函数中定义这个变量，那么它就会往上（向创建出它的函数中）查找，这个查找的过程就叫做原型链。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span> ==&gt; 构造函数<span class="number">1</span> ==&gt; 构造函数<span class="number">2</span></span><br><span class="line">&lt;span style=<span class="string">"font-size:14px;"</span>&gt;varPerson=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.age=<span class="string">"匿名"</span>&#125;;</span><br><span class="line">varStudent=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="comment">//创建继承关系,prototype执行Person的一个实例对象</span></span><br><span class="line">Student.prototype=<span class="keyword">new</span>  Person();&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>原型API关系图<br><img src="https://www.newasp.net/attachment/article/2013-3/20133513150105.jpg" alt="原型继承"><br><img src="http://images2015.cnblogs.com/blog/341820/201606/341820-20160610194715371-759828586.png" alt="原型图"><br><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1532438261291&amp;di=e8d0c0383aea37427b26691f124b1240&amp;imgtype=0&amp;src=http%3A%2F%2Fpic2.zhimg.com%2Fv2-7208c58973fa469891e6be970df3ff54_b.jpg" alt="原型图"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> A = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> A();</span><br><span class="line"><span class="built_in">console</span>.log(a.__proto__); <span class="comment">//A &#123;&#125;（即构造器function A 的原型对象）</span></span><br><span class="line"><span class="built_in">console</span>.log(a.__proto__.__proto__); <span class="comment">//Object &#123;&#125;（即构造器function Object 的原型对象）</span></span><br><span class="line"><span class="built_in">console</span>.log(a.__proto__.__proto__.__proto__); <span class="comment">//null</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在JavaScript中原型是一个prototype对象，用于表示类型之间的关系.
    
    </summary>
    
      <category term="JS高级" scheme="https://lipapasma.github.io/lipapa.github.io/categories/JS%E9%AB%98%E7%BA%A7/"/>
    
    
      <category term="概念" scheme="https://lipapasma.github.io/lipapa.github.io/tags/%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>Js</title>
    <link href="https://lipapasma.github.io/lipapa.github.io/2018/07/23/hello-world/"/>
    <id>https://lipapasma.github.io/lipapa.github.io/2018/07/23/hello-world/</id>
    <published>2018-07-23T05:49:18.842Z</published>
    <updated>2018-07-24T11:05:30.053Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="web" scheme="https://lipapasma.github.io/lipapa.github.io/categories/web/"/>
    
      <category term="JS高级" scheme="https://lipapasma.github.io/lipapa.github.io/categories/web/JS%E9%AB%98%E7%BA%A7/"/>
    
    
      <category term="web" scheme="https://lipapasma.github.io/lipapa.github.io/tags/web/"/>
    
      <category term="JS" scheme="https://lipapasma.github.io/lipapa.github.io/tags/JS/"/>
    
  </entry>
  
</feed>
