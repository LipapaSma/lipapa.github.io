<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>空心话</title>
  
  <subtitle>闲来无事</subtitle>
  <link href="/lipapa.github.io/atom.xml" rel="self"/>
  
  <link href="https://lipapasma.github.io/lipapa.github.io/"/>
  <updated>2018-07-24T01:51:37.796Z</updated>
  <id>https://lipapasma.github.io/lipapa.github.io/</id>
  
  <author>
    <name>Lipapa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原型是什么</title>
    <link href="https://lipapasma.github.io/lipapa.github.io/2018/07/24/my-first-blog/"/>
    <id>https://lipapasma.github.io/lipapa.github.io/2018/07/24/my-first-blog/</id>
    <published>2018-07-24T00:44:32.346Z</published>
    <updated>2018-07-24T01:51:37.796Z</updated>
    
    <content type="html"><![CDATA[<p>date: 2018-07-24 08:44:32<br>categories: JS高级</p><p>description:  附加一段文章摘要，字数最好在140字以内，会出现在meta的description</p><p>在JavaScript中原型是一个prototype对象，用于表示类型之间的关系。<br> 原型链是针对构造函数的，比如我先创建了一个函数，然后通过一个变量new了这个函数，那么这个被new出来的函数就会继承创建出来的那个函数的属性，然后如果我访问new出来的这个函数的某个属性，但是我并没有在这个new出来的函数中定义这个变量，那么它就会往上（向创建出它的函数中）查找，这个查找的过程就叫做原型链。<br>Object ==&gt; 构造函数1 ==&gt; 构造函数2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;span style=&quot;font-size:14px;&quot;&gt;varPerson=function()&#123;this.age=&quot;匿名&quot;&#125;;</span><br><span class="line">varStudent=function()&#123;&#125;;</span><br><span class="line">//创建继承关系,prototype执行Person的一个实例对象</span><br><span class="line">Student.prototype=new  Person();&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>原型API关系图<br><img src="https://images2015.cnblogs.com/blog/787416/201603/787416-20160323103557261-114570044.png" alt="image"></p><p><img src="https://images2015.cnblogs.com/blog/787416/201603/787416-20160322110905589-2039017350.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var A = function()&#123;&#125;;</span><br><span class="line">var a = new A();</span><br><span class="line">console.log(a.__proto__); //A &#123;&#125;（即构造器function A 的原型对象）</span><br><span class="line">console.log(a.__proto__.__proto__); //Object &#123;&#125;（即构造器function Object 的原型对象）</span><br><span class="line">console.log(a.__proto__.__proto__.__proto__); //null</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;date: 2018-07-24 08:44:32&lt;br&gt;categories: JS高级&lt;/p&gt;
&lt;p&gt;description:  附加一段文章摘要，字数最好在140字以内，会出现在meta的description&lt;/p&gt;
&lt;p&gt;在JavaScript中原型是一个prot
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://lipapasma.github.io/lipapa.github.io/2018/07/23/hello-world/"/>
    <id>https://lipapasma.github.io/lipapa.github.io/2018/07/23/hello-world/</id>
    <published>2018-07-23T05:49:18.842Z</published>
    <updated>2018-07-24T00:57:33.948Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
